import sqlite3
import pandas as pd
import matplotlib.pyplot as plt


conn=sqlite3.connect('employees_db-full-1.0.6.db')
cur=conn.cursor()

#Question1
q1="SELECT COUNT(emp_no) AS Total_emplyees FROM dept_emp WHERE DATE(to_date) = '9999-01-01'"
res1=pd.read_sql_query(q1,conn)
print(res1)
res1.to_csv('employee_count.csv', index=False) #This to export the data generated by sql query to csv file

#Question2
res21= pd.read_sql_query("SELECT departments.dept_name as department, COUNT(*) as count FROM dept_emp INNER JOIN departments ON dept_emp.dept_no = departments.dept_no WHERE DATE(to_date) = '9999-01-01' GROUP BY dept_emp.dept_no ORDER BY count DESC",conn)
print(res21)
res21.to_csv('ques2.csv', index=False)
bars2=plt.bar(res21["department"], res21["count"],color=['Grey'])
for bar in bars2:#This is to show height of graphs
    height = bar.get_height()
    plt.text(bar.get_x() + bar.get_width()/2.0, height, '%d' % int(height), ha='center', va='bottom')
plt.xlabel("Departments")
plt.xticks(rotation=0,fontsize=7)
plt.ylabel("Number Of Employees")
plt.title("Head Count For Current Employees Across The Various Departments")#this is to give title to graph
plt.show()


#Question3
q3= "SELECT dept_name, ROUND(AVG(total_salary),2) as Average_salary FROM (SELECT departments.dept_name, salaries.salary AS total_salary FROM salaries INNER JOIN dept_emp ON salaries.emp_no = dept_emp.emp_no INNER JOIN departments ON dept_emp.dept_no = departments.dept_no WHERE DATE(salaries.to_date) = '9999-01-01' AND DATE(dept_emp.to_date) = '9999-01-01') GROUP BY dept_name ORDER BY Average_salary DESC"
res31=pd.read_sql_query(q3,conn)
print(res31)
res31.to_csv('ques3.csv', index=False)
bars3=plt.bar(res31["dept_name"], res31["Average_salary"])
for bar in bars3:
    height = bar.get_height()
    plt.text(bar.get_x() + bar.get_width()/2.0, height, '{:.2f}'.format(height), ha='center', va='bottom')
plt.xlabel("Departments")
plt.ylabel("Average Salary")
plt.title("Average Salary of All Current Employees By Department.")
plt.xticks(rotation=0,fontsize=7)
plt.show()


#Question4
q4= "SELECT dept_name, MAX(total_salary) as Maximum_salary FROM (SELECT departments.dept_name, salaries.salary AS total_salary FROM salaries INNER JOIN dept_emp ON salaries.emp_no = dept_emp.emp_no INNER JOIN departments ON dept_emp.dept_no = departments.dept_no WHERE DATE(dept_emp.to_date) = '9999-01-01') GROUP BY dept_name ORDER BY Maximum_salary DESC"
res41=pd.read_sql_query(q4,conn)
print(res41)
res41.to_csv('ques4.csv', index=False)
bars4=plt.bar(res41["dept_name"], res41["Maximum_salary"],color=['yellow'])
for bar in bars4:
    height = bar.get_height()
    plt.text(bar.get_x() + bar.get_width()/2.0, height, '{:.2f}'.format(height), ha='center', va='bottom')
plt.xticks(rotation=0,fontsize=7)
plt.xlabel("Departments")
plt.ylabel(" Maximum Salary")
plt.title("Maximum Salary Of All Current Employees By Department")
plt.show()


#Question5
q5= "SELECT dept_name, COUNT(DISTINCT emp_no) AS Emp_70_And_Above FROM (SELECT DISTINCT departments.dept_name,employees.emp_no FROM employees INNER JOIN dept_emp ON employees.emp_no = dept_emp.emp_no INNER JOIN departments ON dept_emp.dept_no = departments.dept_no WHERE (julianday('now') - julianday(employees.birth_date)) / 365.25 >=70 AND dept_emp.to_date = '9999-01-01') GROUP BY dept_name ORDER BY Emp_70_And_Above DESC"
res51=pd.read_sql_query(q5,conn)
print(res51)
res51.to_csv('ques5.csv', index=False)
bars5=plt.bar(res51["dept_name"], res51["Emp_70_And_Above"],color=['cyan'])
for bar in bars5:
    height = bar.get_height()
    plt.text(bar.get_x() + bar.get_width()/2.0, height, '%d' % int(height), ha='center', va='bottom')
plt.xlabel("Departments")
plt.ylabel("Employees Aged 70 and Above")
plt.xticks(rotation=0,fontsize=7)
plt.title(" Employees Who Are Aged 70 And Above Distributed By Departments")
plt.show()


#Question6
q6= "SELECT title, ROUND(AVG(total_salary),2) as Average_salary FROM(SELECT titles.title, salaries.salary AS total_salary FROM salaries INNER JOIN titles ON salaries.emp_no = titles.emp_no WHERE salaries.to_date = '9999-01-01' AND titles.to_date='9999-01-01') GROUP BY title ORDER BY Average_salary DESC"
res61=pd.read_sql_query(q6,conn)
print(res61)
res61.to_csv('ques6.csv', index=False)
bars6=plt.bar(res61["title"], res61["Average_salary"],color=['green'])
for bar in bars6:
    height = bar.get_height()
    plt.text(bar.get_x() + bar.get_width()/2.0, height, '{:.2f}'.format(height), ha='center', va='bottom')
plt.xlabel("Titles")
plt.ylabel("Average Salary")
plt.xticks(rotation=0,fontsize=7)
plt.title("Average Salary Of Current Employees Grouped By Titles")
plt.show()


#Question7
q7= "SELECT departments.dept_name as department, titles.title AS Title,  COUNT(*) AS count FROM dept_emp INNER JOIN departments ON dept_emp.dept_no = departments.dept_no INNER JOIN TITLES ON titles.emp_no=dept_emp.emp_no WHERE DATE(dept_emp.to_date) = '9999-01-01' and DATE(titles.to_date)= '9999-01-01' GROUP BY dept_emp.dept_no , titles.title"
res71=pd.read_sql_query(q7,conn)
print(res71)
res71.to_csv('ques7.csv', index=False)







